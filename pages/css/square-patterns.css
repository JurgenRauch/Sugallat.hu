/* ===== SQUARE CLUSTER BACKGROUND PATTERNS ===== */
/* 
 * Modular CSS for adding subtle geometric square outlines to blue backgrounds
 * Usage: Add class 'has-square-patterns' to any element with blue background
 */

:root {
    --shape-size: 80px;            /* 25% larger (64px * 1.25 = 80px) */
    --shape-stroke: 3px;           /* Thicker stroke for visibility */
    --shape-gap: 15px;             /* 25% larger gap (12px * 1.25 = 15px) */
    --shape-color: rgba(255, 255, 255, 0.25);  /* More visible opacity */
    --cluster-opacity: 0.5;        /* Higher opacity for more noticeable effect */
}

/* Base container for square patterns */
.has-square-patterns {
    position: relative;
    overflow: hidden;  /* Ensures squares can't go outside their area */
}

/* Square cluster container */
.square-cluster {
    position: absolute;
    display: grid;
    gap: var(--shape-gap);
    opacity: var(--cluster-opacity);
    pointer-events: none;
    transform: translate3d(-50%, -50%, 0);
    z-index: 0;
    contain: layout style paint size; /* Enhanced CSS containment */
    will-change: transform, opacity; /* Specific properties for GPU optimization */
    backface-visibility: hidden;
    perspective: 1000px;
}

/* Grid layouts for different cluster sizes */
.g-3 { 
    grid-template-columns: repeat(3, var(--shape-size)); 
}

.g-5 { 
    grid-template-columns: repeat(5, var(--shape-size)); 
}

.g-7 { 
    grid-template-columns: repeat(7, var(--shape-size)); 
}

.g-3x3 { 
    grid-template-columns: repeat(3, var(--shape-size)); 
}

/* Individual square shape */
.square-shape {
    width: var(--shape-size);
    height: var(--shape-size);
    box-sizing: border-box;
    border: var(--shape-stroke) solid var(--shape-color);
    will-change: opacity;
    transform: translate3d(0, 0, 0); /* Force GPU layer for smooth animation */
    backface-visibility: hidden; /* Prevent flickering */
    contain: layout style; /* Isolate layout calculations */
}

/* Empty placeholder for grid positioning */
.square-empty {
    width: var(--shape-size);
    height: var(--shape-size);
}

/* Responsive adjustments */
@media (max-width: 768px) {
    :root {
        --shape-size: 60px;        /* 25% larger (48px * 1.25 = 60px) */
        --shape-gap: 10px;         /* 25% larger gap (8px * 1.25 = 10px) */
        --cluster-opacity: 0.4;
    }
}

@media (max-width: 480px) {
    :root {
        --shape-size: 50px;        /* 25% larger (40px * 1.25 = 50px) */
        --shape-gap: 7.5px;        /* 25% larger gap (6px * 1.25 = 7.5px) */
        --cluster-opacity: 0.35;
    }
}

/* Animation variants (optional) */
.square-cluster.animate-fade {
    animation: fadeInPattern 2s ease-out;
}

.square-cluster.animate-scale {
    animation: scaleInPattern 1.5s ease-out;
}

.square-cluster.animate-fade-out {
    animation: fadeOutPattern 2s ease-out forwards;
}

.square-cluster.animate-scale-out {
    animation: scaleOutPattern 1.5s ease-out forwards;
}

@keyframes fadeInPattern {
    0% {
        opacity: var(--cluster-opacity);
    }
    100% {
        opacity: var(--cluster-opacity);
    }
}

@keyframes scaleInPattern {
    0% {
        opacity: var(--cluster-opacity);
        transform: translate(-50%, -50%) scale(1);
    }
    100% {
        opacity: var(--cluster-opacity);
        transform: translate(-50%, -50%) scale(1);
    }
}

@keyframes fadeOutPattern {
    0% {
        opacity: var(--cluster-opacity);
    }
    100% {
        opacity: 0;
    }
}

@keyframes scaleOutPattern {
    0% {
        opacity: var(--cluster-opacity);
        transform: translate(-50%, -50%) scale(1);
    }
    100% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.5);
    }
}

/* Color variants for different backgrounds */
.square-cluster.light-pattern {
    --shape-color: rgba(255, 255, 255, 0.3);
    --cluster-opacity: 0.6;
}

.square-cluster.dark-pattern {
    --shape-color: rgba(0, 0, 0, 0.2);
    --cluster-opacity: 0.4;
}

.square-cluster.accent-pattern {
    --shape-color: rgba(59, 130, 246, 0.3);
    --cluster-opacity: 0.5;
}

/* Footer-specific styling (dark background with subtle white squares) */
.footer .square-cluster {
    --shape-color: rgba(255, 255, 255, 0.08);
    --cluster-opacity: 0.3;
}

/* Dynamic opacity animation for individual squares - optimized for performance */
@keyframes fadeSquarePattern {
    0% {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
    50% {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
    100% {
        opacity: 0;
        transform: translate3d(0, 0, 0);
    }
}
